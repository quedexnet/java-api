apply plugin: 'java'
apply plugin: 'maven'
apply plugin: 'signing'

group 'net.quedex'
version '0.6.0-SNAPSHOT'
ext.isReleaseVersion = !version.endsWith("SNAPSHOT")

ext {
    if (!project.hasProperty('ossrhUsername')) {
        ossrhUsername = ''
    }

    if (!project.hasProperty('ossrhPassword')) {
        ossrhPassword = ''
    }
}

sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
    mavenCentral()
}

dependencies {
    compile group: 'org.slf4j', name: 'slf4j-api', version: '1.7.21'
    compile group: 'com.fasterxml.jackson.core', name: 'jackson-databind', version: '2.8.0'
    compile group: 'org.bouncycastle', name: 'bcpg-jdk15on', version: '1.54'
    compile group: 'com.google.guava', name: 'guava', version: '19.0'
    compile group: 'org.java-websocket', name: 'Java-WebSocket', version: '1.3.0'

    testCompile group: 'org.testng', name: 'testng', version: '6.9.10'
    testCompile group: 'ch.qos.logback', name: 'logback-classic', version: '1.1.7'
    testCompile group: 'org.mockito', name: 'mockito-all', version: '1.10.19'
    testCompile group: 'org.assertj', name: 'assertj-core', version: '3.5.2'
    testCompile group: 'junit', name: 'junit', version: '4.12' // mockito depends on it
}

test {
    useTestNG()

    testLogging.showStandardStreams = true
}

task javadocJar(type: Jar) {
    classifier = 'javadoc'
    from javadoc
}

task sourcesJar(type: Jar) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

signing {
    required { isReleaseVersion && gradle.taskGraph.hasTask("uploadArchives") }
    sign configurations.archives
}

artifacts {
    archives sourcesJar
    archives javadocJar
}

uploadArchives {
    repositories {
        mavenDeployer {
            beforeDeployment {
                MavenDeployment deployment -> signing.signPom(deployment)
            }

            repository(url: "https://oss.sonatype.org/service/local/staging/deploy/maven2/") {
                authentication(userName: ossrhUsername, password: ossrhPassword)
            }

            snapshotRepository(url: "https://oss.sonatype.org/content/repositories/snapshots/") {
                authentication(userName: ossrhUsername, password: ossrhPassword)
            }

            pom.project {
                name = 'java-api'
                packaging = 'pom'
                // optionally artifactId can be defined here
                description = 'Quedex Java API.'
                url = 'https://github.com/quedexnet/java-api'

                scm {
                    connection = 'scm:git:https://github.com/wgromniak/java-api.git'
                    developerConnection = 'scm:git:https://github.com/quedexnet/java-api.git'
                    url = 'https://github.com/quedexnet/java-api'
                }

                licenses {
                    license {
                        name = 'The MIT License'
                        url = 'https://opensource.org/licenses/MIT'
                    }
                }

                developers {
                    developer {
                        id = 'wgromniak'
                        name = 'Wiktor Gromniak'
                        email = 'wgromniak@quedex.net'
                        url = 'https://github.com/wgromniak'
                    }
                }
            }
        }
    }
}

wrapper {
    gradleVersion '2.14'
}